<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backend.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.backend.entity.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="role_id" jdbcType="INTEGER" property="roleId" />
        <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username, password, role_id, telephone
    </sql>
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id, username, password, role_id
        from user
        where username = #{username}
    </select>
    <update id="updateUserInfoByPrimaryKey" parameterType="com.example.backend.entity.User">
        update user
        set username  = #{username,jdbcType=VARCHAR},
            role_id   = #{roleId,jdbcType=INTEGER},
            telephone = #{telephone,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="alterPassword">
        update user
        set password = #{newPSW}
        where id = #{userId} LIMIT 1
    </update>

    <select id="getUserPageWithoutSuAccount" parameterType="map" resultMap="BaseResultMap">
        <include refid="getUserListWithoutSuAccount" />
    </select>
    <select id="getUserListWithoutSuAccount" parameterType="map" resultMap="BaseResultMap">
        <include refid="getUserListWithoutSuAccount" />
    </select>
    <sql id="getUserListWithoutSuAccount">
        SELECT * FROM user
        <where>
            <!-- 过滤 su 账号 -->
            id != 1
            <if test="query.id != null and query.id != ''">
                AND id = #{query.id}
            </if>
            <if test="query.username != null and query.username != ''">
                AND username LIKE concat('%',#{query.username},'%')
            </if>
            <if test="query.roleId != null">
                AND role_id = #{query.roleId}
            </if>
            <if test="query.telephone != null and query.telephone != ''">
                AND telephone LIKE concat('%',#{query.telephone},'%')
            </if>
        </where>
    </sql>
    <!--<update id="updateByUserId" parameterType="com.example.backend.entity.User">-->
    <!--    update user-->
    <!--    <set>-->
    <!--        <if test="username != null">-->
    <!--            username = #{username,jdbcType=VARCHAR},-->
    <!--        </if>-->
    <!--        <if test="password != null">-->
    <!--            password = #{password,jdbcType=VARCHAR},-->
    <!--        </if>-->
    <!--        <if test="roleId != null">-->
    <!--            role_id = #{roleId,jdbcType=INTEGER},-->
    <!--        </if>-->
    <!--        <if test="telephone != null">-->
    <!--            telephone = #{telephone,jdbcType=VARCHAR},-->
    <!--        </if>-->
    <!--    </set>-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->
</mapper>